<!--
  Definitions for SVG Tiny 1.2.  Note that this file currently isn't used
  by the build scripts for this specification; it exists to be imported
  by other specifications from their definitions.xml files.
  -->
<definitions xmlns='http://mcc.id.au/ns/local' xmlns:x='http://mcc.id.au/ns/local'>

  <!-- === defined in this specification ================================== -->

  <!-- ... elements and element-specific attributes ....................... -->

  <element
      name='a'
      href='linking.html#AElement'
      attributecategories='conditional, core, focus, presentation, xlink'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <x:contentmodel xmlns='http://www.w3.org/1999/xhtml'>Any number of elements that its parent may contain (except <a>'a'</a>) or character data, in any order.</x:contentmodel>
    <attribute name='xlink:href' href='linking.html#AElementXLinkHrefAttribute'/>
    <attribute name='xlink:show' href='linking.html#AElementXLinkShowAttribute'/>
    <attribute name='xlink:actuate' href='linking.html#AElementXLinkActuateAttribute'/>
    <attribute name='target' href='linking.html#AElementTargetAttribute'/>
  </element>

  <element
    name='animate'
    href='animate.html#AnimateElement'
    contentmodel='anyof'
    elementcategories='descriptive'
    elements='handler'
    attributecategories='conditional, core, xlink, animation attribute target, animation timing, animation value, animation addition'
    interfaces='SVGAnimationElement'/>

  <element
    name='animateColor'
    href='animate.html#AnimateColorElement'
    contentmodel='anyof'
    elementcategories='descriptive'
    elements='handler'
    attributecategories='conditional, core, xlink, animation attribute target, animation timing, animation value, animation addition'
    interfaces='SVGAnimationElement'/>

  <element
      name='animateMotion'
      href='animate.html#AnimateMotionElement'
      attributecategories='conditional, core, animation event, xlink, animation timing, animation value, animation addition'
      interfaces='SVGAnimationElement'>
    <x:contentmodel xmlns='http://www.w3.org/1999/xhtml'>Any number of <a>'handler'</a> and <a>descriptive elements</a>, and at most one <a>'mpath'</a> element, in any order.</x:contentmodel>
    <!--
    <attribute name='calcMode' href='animate.html#AnimateMotionElementCalcModeAttribute'/>
    -->
    <attribute name='path' href='animate.html#PathAttribute'/>
    <attribute name='keyPoints' href='animate.html#KeyPointsAttribute'/>
    <attribute name='rotate' href='animate.html#RotateAttribute'/>
    <attribute name='origin' href='animate.html#OriginAttribute'/>
  </element>

  <element
      name='animateTransform'
      href='animate.html#AnimateTransformElement'
      contentmodel='anyof'
      elementcategories='descriptive'
      elements='handler'
      attributecategories='conditional, core, xlink, animation attribute target, animation timing, animation value, animation addition'
      interfaces='SVGAnimationElement'>
    <attribute name='type' href='animate.html#AnimateTransformElementTypeAttribute'/>
  </element>

  <element
      name='animation'
      href='multimedia.html#AnimationElement'
      contentmodel='anyof'
      elementcategories='descriptive, animation'
      elements='discard, handler'
      attributecategories='conditional, core, focus, media presentation, xlink, animation timing, animation synchronization'
      attributes='focusHighlight, initialVisibility, preserveAspectRatio'
      interfaces='SVGVisualMediaElement'>
    <attribute name='xlink:href' href='multimedia.html#AnimationElementHrefAttribute'/>
  </element>

  <element
      name='audio'
      href='multimedia.html#AudioElement'
      contentmodel='anyof'
      elementcategories='descriptive, animation'
      elements='discard, handler'
      attributecategories='conditional, core, media presentation, xlink, animation timing, animation synchronization'
      interfaces='SVGTimedElement'>
    <attribute name='xlink:href' href='multimedia.html#AudioElementHrefAttribute'/>
    <attribute name='type' href='multimedia.html#AudioElementTypeAttribute'/>
  </element>

  <element
      name='circle'
      href='shapes.html#CircleElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, handler'
      attributecategories='conditional, core, presentation, focus'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='cx' href='shapes.html#CircleElementCXAttribute'/>
    <attribute name='cy' href='shapes.html#CircleElementCYAttribute'/>
    <attribute name='r' href='shapes.html#CircleElementRAttribute'/>
  </element>

  <element
    name='defs'
    href='struct.html#DefsElement'
    contentmodel='anyof'
    elementcategories='descriptive, animation, shape, text content block, gradient, structural'
    elements='a, animation, audio, discard, font, font-face, foreignObject, handler, image, listener, prefetch, script, solidColor, switch, video'
    attributecategories='core, presentation'
    interfaces='SVGElement'/>

  <element
    name='desc'
    href='struct.html#DescElement'
    contentmodel='text'
    attributecategories='core, conditional, media presentation'
    interfaces='SVGElement'/>

  <element
    name='discard'
    href='struct.html#DiscardElement'
    contentmodel='anyof'
    elementcategories='descriptive'
    elements='discard'
    attributecategories='core, conditional, xlink'
    attributes='begin'
    interfaces='SVGElement'/>

  <element
      name='ellipse'
      href='shapes.html#EllipseElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, handler'
      attributecategories='conditional, core, presentation, focus'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='cx' href='shapes.html#EllipseElementCXAttribute'/>
    <attribute name='cy' href='shapes.html#EllipseElementCYAttribute'/>
    <attribute name='rx' href='shapes.html#EllipseElementRXAttribute'/>
    <attribute name='ry' href='shapes.html#EllipseElementRYAttribute'/>
  </element>

  <element
      name='font'
      href='fonts.html#FontElement'
      contentmodel='anyof'
      elementcategories='descriptive'
      elements='font-face, missing-glyph, glyph, hkern'
      attributecategories='core'
      attributes='externalResourcesRequired'
      interfaces='SVGElement'>
    <attribute name='horiz-origin-x' href='fonts.html#FontElementHorizOriginXAttribute'/>
    <attribute name='horiz-adv-x' href='fonts.html#FontElementHorizAdvXAttribute'/>
  </element>

  <element
      name='font-face'
      href='fonts.html#FontFaceElement'
      attributecategories='core'
      attributes='externalResourcesRequired'
      interfaces='SVGElement'>
    <x:contentmodel xmlns='http://www.w3.org/1999/xhtml'>Any number of <a>descriptive elements</a> and <a>'font-face-src'</a> elements, in any order.</x:contentmodel>
    <attribute name='font-family' href='fonts.html#FontFaceElementFontFamilyAttribute'/>
    <attribute name='font-style' href='fonts.html#FontFaceElementFontStyleAttribute'/>
    <attribute name='font-variant' href='fonts.html#FontFaceElementFontVariantAttribute'/>
    <attribute name='font-weight' href='fonts.html#FontFaceElementFontWeightAttribute'/>
    <attribute name='font-stretch' href='fonts.html#FontFaceElementFontStretchAttribute'/>
    <attribute name='unicode-range' href='fonts.html#FontFaceElementUnicodeRangeAttribute'/>
    <attribute name='units-per-em' href='fonts.html#FontFaceElementUnitsPerEmAttribute'/>
    <attribute name='panose-1' href='fonts.html#FontFaceElementPanose1Attribute'/>
    <attribute name='stemv' href='fonts.html#FontFaceElementStemvAttribute'/>
    <attribute name='stemh' href='fonts.html#FontFaceElementStemhAttribute'/>
    <attribute name='slope' href='fonts.html#FontFaceElementSlopeAttribute'/>
    <attribute name='cap-height' href='fonts.html#FontFaceElementCapHeightAttribute'/>
    <attribute name='x-height' href='fonts.html#FontFaceElementXHeightAttribute'/>
    <attribute name='accent-height' href='fonts.html#FontFaceElementAccentHeightAttribute'/>
    <attribute name='ascent' href='fonts.html#FontFaceElementAscentAttribute'/>
    <attribute name='descent' href='fonts.html#FontFaceElementDescentAttribute'/>
    <attribute name='widths' href='fonts.html#FontFaceElementWidthsAttribute'/>
    <attribute name='bbox' href='fonts.html#FontFaceElementBboxAttribute'/>
    <attribute name='ideographic' href='fonts.html#FontFaceElementIdeographicAttribute'/>
    <attribute name='alphabetic' href='fonts.html#FontFaceElementAlphabeticAttribute'/>
    <attribute name='mathematical' href='fonts.html#FontFaceElementMathematicalAttribute'/>
    <attribute name='hanging' href='fonts.html#FontFaceElementHangingAttribute'/>
    <attribute name='underline-position' href='fonts.html#FontFaceElementUnderlinePositionAttribute'/>
    <attribute name='underline-thickness' href='fonts.html#FontFaceElementUnderlineThicknessAttribute'/>
    <attribute name='strikethrough-position' href='fonts.html#FontFaceElementStrikeThroughPositionAttribute'/>
    <attribute name='strikethrough-thickness' href='fonts.html#FontFaceElementStrikeThroughThicknessAttribute'/>
    <attribute name='overline-position' href='fonts.html#FontFaceElementOverlinePositionAttribute'/>
    <attribute name='overline-thickness' href='fonts.html#FontFaceElementOverlineThicknessAttribute'/>
  </element>

  <element
    name='font-face-src'
    href='fonts.html#FontFaceSrcElement'
    contentmodel='anyof'
    elementcategories='descriptive'
    elements='font-face-uri'
    attributecategories='core'
    interfaces='SVGElement'/>

  <element
    name='font-face-uri'
    href='fonts.html#FontFaceURIElement'
    elementcategories='descriptive'
    attributecategories='core, xlink'
    attributes='externalResourcesRequired'
    interfaces='SVGElement'>
    <attribute name='xlink:href' href='fonts.html#FontFaceUriElementHrefAttribute'/>
  </element>

  <element
      name='foreignObject'
      href='extend.html#ForeignObjectElement'
      contentmodel='any'
      attributecategories='core, conditional, focus, properties, external'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='x' href='extend.html#ForeignObjectElementXAttribute'/>
    <attribute name='y' href='extend.html#ForeignObjectElementYAttribute'/>
    <attribute name='width' href='extend.html#ForeignObjectElementWidthAttribute'/>
    <attribute name='height' href='extend.html#ForeignObjectElementHeightAttribute'/>
  </element>

  <element
    name='g'
    href='struct.html#GElement'
    contentmodel='anyof'
    elementcategories='descriptive, animation, shape, text content block, gradient, structural'
    elements='a, animation, audio, discard, font, font-face, foreignObject, handler, image, listener, prefetch, script, solidColor, switch, video'
    attributecategories='conditional, core, properties, focus'
    attributes='externalResourcesRequired, focusHighlight, transform'
    interfaces='SVGLocatableElement'/>

  <element
      name='glyph'
      href='fonts.html#GlyphElement'
      contentmodel='anyof'
      elementcategories='descriptive'
      attributecategories='core'
      attributes='d, horiz-adv-x'
      interfaces='SVGElement'>
    <attribute name='unicode' href='fonts.html#GlyphElementUnicodeAttribute'/>
    <attribute name='glyph-name' href='fonts.html#GlyphElementGlyphNameAttribute'/>
    <attribute name='arabic-form' href='fonts.html#GlyphElementArabicFormAttribute'/>
    <attribute name='lang' href='fonts.html#GlyphElementLangAttribute'/>
  </element>

  <element
      name='handler'
      href='script.html#HandlerElement'
      attributecategories='core'
      attributes='externalResourcesRequired'
      interfaces='SVGElement'>
    <x:contentmodel xmlns='http://www.w3.org/1999/xhtml'>If the element has an <a>'handler/xlink:href'</a> attribute specified, then any number of <a>descriptive elements</a>, in any order.  Otherwise, any number of <a>descriptive elements</a> and text content, in any order.</x:contentmodel>
    <attribute name='xlink:href' href='script.html#HandlerElementHrefAttribute'/>
    <attribute name='type' href='script.html#HandlerElementTypeAttribute'/>
    <attribute name='ev:event' href='script.html#HandlerElementEventAttribute'/>
  </element>

  <element
      name='hkern'
      href='fonts.html#HKernElement'
      elementcategories='descriptive'
      attributecategories='core'
      interfaces='SVGElement'>
    <attribute name='u1' href='fonts.html#HKernElementU1Attribute'/>
    <attribute name='g1' href='fonts.html#HKernElementG1Attribute'/>
    <attribute name='u2' href='fonts.html#HKernElementU2Attribute'/>
    <attribute name='g2' href='fonts.html#HKernElementG2Attribute'/>
    <attribute name='k' href='fonts.html#HKernElementKAttribute'/>
  </element>

  <element
      name='image'
      href='struct.html#ImageElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, handler'
      attributecategories='core, conditional, focus, style, xlink, media presentation'
      attributes='externalResourcesRequired, focusHighlight, opacity, preserveAspectRatio, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='x' href='struct.html#ImageElementXAttribute'/>
    <attribute name='y' href='struct.html#ImageElementYAttribute'/>
    <attribute name='width' href='struct.html#ImageElementWidthAttribute'/>
    <attribute name='height' href='struct.html#ImageElementHeightAttribute'/>
    <attribute name='xlink:href' href='struct.html#ImageElementHrefAttribute'/>
    <attribute name='type' href='struct.html#ImageElementTypeAttribute'/>
  </element>

  <element
      name='line'
      href='shapes.html#LineElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, handler'
      attributecategories='conditional, core, presentation, focus'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='x1' href='shapes.html#LineElementX1Attribute'/>
    <attribute name='y1' href='shapes.html#LineElementY1Attribute'/>
    <attribute name='x2' href='shapes.html#LineElementX2Attribute'/>
    <attribute name='y2' href='shapes.html#LineElementY2Attribute'/>
  </element>

  <element
      name='linearGradient'
      href='painting.html#LinearGradientElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, stop'
      attributecategories='core, presentation'
      attributes='externalResourcesRequired'
      interfaces='SVGElement'>
    <attribute name='x1' href='painting.html#LinearGradientElementX1Attribute'/>
    <attribute name='y1' href='painting.html#LinearGradientElementY1Attribute'/>
    <attribute name='x2' href='painting.html#LinearGradientElementX2Attribute'/>
    <attribute name='y2' href='painting.html#LinearGradientElementY2Attribute'/>
    <attribute name='gradientUnits' href='painting.html#LinearGradientElementGradientUnitsAttribute'/>
  </element>

  <!-- Should this implement SVGElement? -->
  <element
      name='listener'
      href='script.html#ListenerElement'
      attributecategories='core'>
    <attribute name='event' href='script.html#ListenerElementEventAttribute'/>
    <attribute name='phase' href='script.html#ListenerElementPhaseAttribute'/>
    <attribute name='propagate' href='script.html#ListenerElementPropagateAttribute'/>
    <attribute name='defaultAction' href='script.html#ListenerElementDefaultActionAttribute'/>
    <attribute name='observer' href='script.html#ListenerElementEventObserverAttribute'/>
    <attribute name='target' href='script.html#ListenerElementEventTargetAttribute'/>
    <attribute name='handler' href='script.html#ListenerElementEventHandlerAttribute'/>
  </element>

  <element
    name='metadata'
    href='metadata.html#MetadataElement'
    contentmodel='text'
    attributecategories='core, conditional, media presentation'
    interfaces='SVGElement'/>

  <element
    name='missing-glyph'
    href='fonts.html#MissingGlyphElement'
    contentmodel='anyof'
    elementcategories='descriptive'
    attributecategories='core'
    attributes='d, horiz-adv-x'
    interfaces='SVGElement'/>

  <element
      name='mpath'
      href='animate.html#MPathElement'
      contentmodel='anyof'
      elementcategories='descriptive'
      attributecategories='core, xlink'
      interfaces='SVGElement'>
    <attribute name='xlink:href' href='animate.html#MPathElementHrefAttribute'/>
  </element>

  <element
      name='path'
      href='paths.html#PathElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, handler'
      attributecategories='conditional, core, presentation, focus'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='d' href='paths.html#DAttribute'/>
    <attribute name='pathLength' href='paths.html#PathLengthAttribute'/>
  </element>

  <element
      name='prefetch'
      href='struct.html#PrefetchElement'
      contentmodel='anyof'
      elementcategories='descriptive'
      attributecategories='core, xlink'
      interfaces='SVGElement'>
    <attribute name='mediaSize' href='struct.html#PrefetchElementMediaSizeElement'/>
    <attribute name='mediaTime' href='struct.html#PrefetchElementMediaTimeElement'/>
    <attribute name='mediaCharacterEncoding' href='struct.html#PrefetchElementMediaCharacterEncodingAttribute'/>
    <attribute name='mediaContentEncodings' href='struct.html#PrefetchElementMediaContentEncodingsAttribute'/>
    <attribute name='bandwidth' href='struct.html#PrefetchElementBandwidthAttribute'/>
  </element>

  <element
      name='polygon'
      href='shapes.html#PolygonElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, handler'
      attributecategories='conditional, core, presentation, focus'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='points' href='shapes.html#PolygonElementPointsAttribute'/>
  </element>

  <element
      name='polyline'
      href='shapes.html#PolylineElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, handler'
      attributecategories='conditional, core, presentation, focus'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='points' href='shapes.html#PolylineElementPointsAttribute'/>
  </element>

  <element
      name='radialGradient'
      href='painting.html#RadialGradientElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, stop'
      attributecategories='core, presentation'
      attributes='externalResourcesRequired'
      interfaces='SVGElement'>
    <attribute name='cx' href='painting.html#RadialGradientElementCXAttribute'/>
    <attribute name='cy' href='painting.html#RadialGradientElementCYAttribute'/>
    <attribute name='r' href='painting.html#RadialGradientElementRAttribute'/>
    <attribute name='fx' href='painting.html#RadialGradientElementFXAttribute'/>
    <attribute name='fy' href='painting.html#RadialGradientElementFYAttribute'/>
    <attribute name='gradientUnits' href='painting.html#RadialGradientElementGradientUnitsAttribute'/>
  </element>

  <element
      name='rect'
      href='shapes.html#RectElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, handler'
      attributecategories='conditional, core, presentation, focus'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='x' href='shapes.html#RectElementXAttribute'/>
    <attribute name='y' href='shapes.html#RectElementYAttribute'/>
    <attribute name='width' href='shapes.html#RectElementWidthAttribute'/>
    <attribute name='height' href='shapes.html#RectElementHeightAttribute'/>
    <attribute name='rx' href='shapes.html#RectElementRXAttribute'/>
    <attribute name='ry' href='shapes.html#RectElementRYAttribute'/>
  </element>

  <element
      name='script'
      href='script.html#ScriptElement'
      attributecategories='core, xlink'
      attributes='externalResourcesRequired'
      interfaces='SVGElement'>
    <x:contentmodel xmlns='http://www.w3.org/1999/xhtml'>If the element has an <a>'script/xlink:href'</a> attribute specified, then any number of <a>descriptive elements</a>, in any order.  Otherwise, any number of <a>descriptive elements</a> and text content, in any order.</x:contentmodel>
    <attribute name='type' href='script.html#ScriptElementTypeAttribute'/>
    <attribute name='xlink:href' href='linking.html#ScriptElementHrefAttribute'/>
  </element>

  <element
      name='set'
      href='animate.html#SetElement'
      contentmodel='anyof'
      elementcategories='descriptive'
      attributecategories='conditional, core, xlink, animation attribute target, animation timing'
      interfaces='SVGAnimationElement'>
    <attribute name='to' href='animate.html#SetElementToAttribute'/>
  </element>

  <element
    name='solidColor'
    href='painting.html#SolidColorElement'
    contentmodel='anyof'
    elementcategories='descriptive, animation'
    elements='discard, handler'
    attributecategories='core, presentation'/>

  <element
      name='stop'
      href='painting.html#StopElement'
      contentmodel='anyof'
      elements='descriptive, animation'
      attributecategories='core, presentation'
      interfaces='SVGElement'>
    <attribute name='offset' href='painting.html#StopElementOffsetAttribute'/>
  </element>

  <element
      name='svg'
      href='struct.html#SVGElement'
      contentmodel='anyof'
      elementcategories='descriptive, animation, shape, text content block, gradient, structural'
      elements='a, animation, audio, discard, font, font-face, foreignObject, handler, image, listener, prefetch, script, solidColor, switch, video'
      attributecategories='core, presentation, focus'
      attributes='contentScriptType, externalResourcesRequired, focusHighlight, viewBox, preserveAspectRatio, zoomAndPan'
      interfaces='SVGSVGElement'>
    <attribute name='version' href='struct.html#SVGElementVersionAttribute'/>
    <attribute name='baseProfile' href='struct.html#SVGElementBaseProfileAttribute'/>
    <attribute name='width' href='struct.html#SVGElementWidthAttribute'/>
    <attribute name='height' href='struct.html#SVGElementHeightAttribute'/>
    <attribute name='snapshotTime' href='struct.html#SVGElementSnapshotTimeAttribute'/>
    <attribute name='playbackOrder' href='struct.html#SVGElementPlaybackOrderAttribute'/>
    <attribute name='timelineBegin' href='struct.html#SVGElementTimelineBeginAttribute'/>
    <attribute name='syncBehaviorDefault' href='multimedia.html#SyncBehaviorDefaultAttribute'/>
    <attribute name='syncToleranceDefault' href='multimedia.html#SyncToleranceDefaultAttribute'/>
  </element>

  <element
      name='switch'
      href='struct.html#SwitchElement'
      contentmodel='anyof'
      attributecategories='conditional, core, presentation, focus'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <x:contentmodel xmlns='http://www.w3.org/1999/xhtml'>Any number of elements that its parent may contain (except <a>'switch'</a>) or character data, in any order.</x:contentmodel>
  </element>

  <element
    name='tbreak'
    href='text.html#tbreakElement'
    attributecategories='core, conditional'
    interfaces='SVGElement'/>

  <element
      name='text'
      href='text.html#TextElement'
      contentmodel='textoranyof'
      elementcategories='descriptive, animation'
      elements='discard, handler, tspan, switch, a'
      attributecategories='core, conditional, presentation, focus'
      attributes='editable, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='x' href='text.html#TextElementXAttribute'/>
    <attribute name='y' href='text.html#TextElementYAttribute'/>
    <attribute name='rotate' href='text.html#TextElementRotateAttribute'/>
  </element>

  <!-- XXX This is probably wrong; it needs to allow tbreak children. -->
  <element
      name='textArea'
      href='text.html#TextAreaElement'
      contentmodel='textoranyof'
      elementcategories='descriptive, animation'
      elements='discard, handler, tspan, switch, a'
      attributecategories='core, conditional, presentation, focus'
      attributes='editable, focusHighlight, transform'
      interfaces='SVGLocatableElement'>
    <attribute name='x' href='text.html#TextAreaElementXAttribute'/>
    <attribute name='y' href='text.html#TextAreaElementYAttribute'/>
    <attribute name='width' href='text.html#TextAreaElementWidthAttribute'/>
    <attribute name='height' href='text.html#TextAreaElementHeightAttribute'/>
  </element>

  <element
    name='title'
    href='struct.html#TitleElement'
    contentmodel='text'
    attributecategories='core, conditional, media presentation'
    interfaces='SVGElement'/>

  <element
      name='tspan'
      href='text.html#TSpanElement'
      contentmodel='textoranyof'
      elementcategories='descriptive, animation'
      elements='discard, handler, tspan, switch, a'
      attributecategories='core, conditional, presentation, focus'
      attributes='focusHighlight'
      interfaces='SVGLocatableElement'/>

  <element
      name='use'
      href='struct.html#UseElement'
      contentmodel='anyof'
      elementcategories='animation, descriptive'
      elements='discard, handler'
      attributecategories='core, conditional, presentation, xlink, focus'
      attributes='externalResourcesRequired, focusHighlight, transform'
      interfaces='SVGUseElement'>
    <attribute name='x' href='struct.html#UseElementXAttribute'/>
    <attribute name='y' href='struct.html#UseElementYAttribute'/>
    <attribute name='xlink:href' href='struct.html#UseElementHrefAttribute'/>
  </element>

  <element
      name='video'
      href='multimedia.html#VideoElement'
      contentmodel='anyof'
      elementcategories='descriptive, animation'
      elements='discard, handler'
      attributecategories='core, media presentation, xlink, conditional, focus, animation timing, animation synchronization'
      attributes='focusHighlight, externalResourcesRequired, transform, preserveAspectRatio, initialVisibility'
      interfaces='SVGVisualMediaElement'>
    <attribute name='x' href='multimedia.html#VideoElementXAttribute'/>
    <attribute name='y' href='multimedia.html#VideoElementYAttribute'/>
    <attribute name='width' href='multimedia.html#VideoElementWidthAttribute'/>
    <attribute name='height' href='multimedia.html#VideoElementHeightAttribute'/>
    <attribute name='xlink:href' href='multimedia.html#VideoElementHrefAttribute'/>
    <attribute name='type' href='multimedia.html#VideoElementTypeAttribute'/>
    <attribute name='transformBehavior' href='multimedia.html#VideoElementTransformBehaviorAttribute'/>
    <attribute name='overlay' href='multimedia.html#VideoElementOverlayAttribute'/>
  </element>


  <!-- ... element categories ............................................ -->

  <elementcategory name='animation' href='intro.html#TermAnimationElement' elements='animate, animateColor, animateMotion, animateTransform, set'/>
  <elementcategory name='descriptive' href='intro.html#TermDescriptiveElement' elements='desc, title, metadata'/>
  <elementcategory name='shape' href='intro.html#TermShapeElement' elements='circle, ellipse, line, path, polygon, polyline, rect'/>
  <elementcategory name='structural' href='intro.html#TermStructuralElement' elements='defs, g, use'/>
  <elementcategory name='text content block' href='intro.html#TermTextElement' elements='text, textArea'/>
  <elementcategory name='gradient' href='intro.html#TermGradientElement' elements='linearGradient, radialGradient'/>

  <!-- ... attributes common to multiple elements ........................ -->

  <!-- attributes common to both glyph and missing-glyph -->
  <attribute name='d' elements='glyph, missing-glyph' href='fonts.html#GlyphElementDAttribute'/>
  <attribute name='horiz-adv-x' elements='glyph, missing-glyph' href='fonts.html#GlyphElementHorizAdvXAttribute'/>

  <!-- xlink:show and xlink:actuate for all elements supporting the XLink attributes, except a -->
  <attribute name='xlink:show' elements='animate, animateColor, animateMotion, animateTransform, animation, audio, discard, font-face-uri, image, mpath, prefetch, script, set, use, video' href='linking.html#XLinkShowAttribute'/>
  <attribute name='xlink:actuate' elements='animate, animateColor, animateMotion, animateTransform, animation, audio, discard, font-face-uri, image, mpath, prefetch, script, set, use, video' href='linking.html#XLinkActuateAttribute'/>

  <!-- attribute common to all animation elements -->
  <attribute name='xlink:href' elements='animate, animateColor, animateMotion, animateTransform, set' href='animate.html#HrefAttribute'/>

  <!-- attributes common to animation elements, media elements and discard -->
  <attribute name='begin' elements='animate, set, animateMotion, animateColor, animateTransform, discard, animation, video, audio' href='animate.html#BeginAttribute'/>

  <!-- attributes common to text content block elements -->
  <attribute name='editable' elements='text, textArea' href='text.html#EditableAttribute'/>

  <!-- misc -->
  <attribute name='focusHighlight' href='interact.html#FocusHighlightAttribute'/>
  <attribute name='contentScriptType' href='script.html#ContentScriptTypeAttribute'/>
  <attribute name='externalResourcesRequired' href='struct.html#ExternalResourcesRequiredAttribute'/>
  <attribute name='viewBox' href='coords.html#ViewBoxAttribute'/>
  <attribute name='preserveAspectRatio' href='coords.html#PreserveAspectRatioAttribute'/>
  <attribute name='transform' href='coords.html#TransformAttribute'/>
  <attribute name='zoomAndPan' href='interact.html#ZoomAndPanAttribute'/>

  <!-- ... attribute categories .......................................... -->

  <attributecategory
      name='conditional'
      href='intro.html#TermConditionalAttribute'>
    <attribute name='requiredFeatures' href='struct.html#RequiredFeaturesAttribute'/>
    <attribute name='requiredFonts' href='struct.html#RequiredFontsAttribute'/>
    <attribute name='requiredFormats' href='struct.html#RequiredFormatsAttribute'/>
    <attribute name='requiredExtensions' href='struct.html#RequiredExtensionsAttribute'/>
    <attribute name='systemLanguage' href='struct.html#SystemLanguageAttribute'/>
  </attributecategory>

  <attributecategory
      name='core'
      href='struct.html#CommonAttributes'>
    <attribute name='class' href='struct.html#ClassAttribute'/>
    <attribute name='id' href='struct.html#IDAttribute'/>
    <attribute name='xml:id' href='struct.html#xmlIDAttribute'/>
    <attribute name='xml:base' href='struct.html#XMLBaseAttribute'/>
    <attribute name='xml:lang' href='struct.html#XMLLangAttribute'/>
    <attribute name='xml:space' href='struct.html#XMLSpaceAttribute'/>
    <attribute name='role' href='struct.html#RoleAttribute'/>
    <attribute name='rel' href='struct.html#RelAttribute'/>
    <attribute name='rev' href='struct.html#RevAttribute'/>
    <attribute name='about' href='struct.html#AboutAttribute'/>
    <attribute name='content' href='struct.html#ContentAttribute'/>
    <attribute name='datatype' href='struct.html#DatatypeAttribute'/>
    <attribute name='property' href='struct.html#PropertyAttribute'/>
    <attribute name='resource' href='struct.html#ResourceAttribute'/>
    <attribute name='typeof' href='struct.html#TypeofAttribute'/>
  </attributecategory>

  <attributecategory
    name='media presentation'
    href='intro.html#TermMediaPresentationAttribute'
    presentationattributes='audio-level, buffered-rendering, display, image-rendering, pointer-events, shape-rendering, text-rendering, viewport-fill, viewport-fill-opacity, visibility'/>

  <attributecategory
    name='presentation'
    href='intro.html#TermPresentationAttribute'
    presentationattributes='audio-level, buffered-rendering, color, color-rendering, direction, display, display-align, fill, fill-opacity, fill-rule, font-family, font-size, font-style, font-variant, font-weight, image-rendering, line-increment, pointer-events, shape-rendering, solid-color, solid-opacity, stop-color, stop-opacity, stroke, stroke-dasharray, stroke-dashoffset, stroke-linecap, stroke-linejoin, stroke-miterlimit, stroke-opacity, stroke-width, text-align, text-anchor, text-rendering, unicode-bidi, vector-effect, viewport-fill, viewport-fill-opacity, visibility'/>

  <attributecategory
      name='xlink'
      href='intro.html#TermXLinkAttribute'
      attributes='xlink:href, xlink:show, xlink:actuate'>
    <attribute name='xlink:type' href='struct.html#XLinkTypeAttribute'/>
    <attribute name='xlink:role' href='struct.html#XLinkRoleAttribute'/>
    <attribute name='xlink:arcrole' href='struct.html#XLinkArcRoleAttribute'/>
    <attribute name='xlink:title' href='struct.html#XLinkTitleAttribute'/>
  </attributecategory>

  <attributecategory
      name='animation attribute target'
      href='intro.html#TermAnimationAttributeTargetAttribute'>
    <attribute name='attributeType' href='animate.html#AttributeTypeAttribute'/>
    <attribute name='attributeName' href='animate.html#AttributeNameAttribute'/>
  </attributecategory>

  <attributecategory
      name='animation timing'
      href='intro.html#TermAnimationTimingAttribute'
      attributes='begin'>
    <attribute name='dur' href='animate.html#DurAttribute'/>
    <attribute name='end' href='animate.html#EndAttribute'/>
    <attribute name='min' href='animate.html#MinAttribute'/>
    <attribute name='max' href='animate.html#MaxAttribute'/>
    <attribute name='restart' href='animate.html#RestartAttribute'/>
    <attribute name='repeatCount' href='animate.html#RepeatCountAttribute'/>
    <attribute name='repeatDur' href='animate.html#RepeatDurAttribute'/>
    <attribute name='fill' href='animate.html#FillAttribute'/>
  </attributecategory>

  <attributecategory
      name='animation value'
      href='intro.html#TermAnimationValueAttribute'>
    <attribute name='calcMode' href='animate.html#CalcModeAttribute'/>
    <attribute name='values' href='animate.html#ValuesAttribute'/>
    <attribute name='keyTimes' href='animate.html#KeyTimesAttribute'/>
    <attribute name='keySplines' href='animate.html#KeySplinesAttribute'/>
    <attribute name='from' href='animate.html#FromAttribute'/>
    <attribute name='to' href='animate.html#ToAttribute'/>
    <attribute name='by' href='animate.html#ByAttribute'/>
  </attributecategory>

  <attributecategory
      name='animation addition'
      href='intro.html#TermAnimationAdditionAttribute'>
    <attribute name='additive' href='animate.html#AdditiveAttribute'/>
    <attribute name='accumulate' href='animate.html#AccumulateAttribute'/>
  </attributecategory>

  <attributecategory
      name='focus'
      href='intro.html#TermFocusAttribute'>
    <attribute name='focusable' href='interact.html#FocusableAttribute'/>
    <attribute name='nav-next' href='interact.html#NavNextAttribute'/>
    <attribute name='nav-prev' href='interact.html#NavPrevAttribute'/>
    <attribute name='nav-up' href='interact.html#NavUpAttribute'/>
    <attribute name='nav-up-right' href='interact.html#NavUpRightAttribute'/>
    <attribute name='nav-right' href='interact.html#NavRightAttribute'/>
    <attribute name='nav-down-right' href='interact.html#NavDownRightAttribute'/>
    <attribute name='nav-down' href='interact.html#NavDownAttribute'/>
    <attribute name='nav-down-left' href='interact.html#NavDownLeftAttribute'/>
    <attribute name='nav-left' href='interact.html#NavLeftAttribute'/>
    <attribute name='nav-up-left' href='interact.html#NavUpleftAttribute'/>
  </attributecategory>

  <!-- ... properties ..................................................... -->

  <property name='audio-level' href='multimedia.html#AudioLevelProperty'/>
  <property name='buffered-rendering' href='painting.html#BufferedRenderingProperty'/>
  <property name='color' href='painting.html#ColorProperty'/>
  <property name='color-rendering' href='painting.html#ColorRenderingProperty'/>
  <property name='direction' href='text.html#DirectionProperty'/>
  <property name='display' href='painting.html#DisplayProperty'/>
  <property name='display-align' href='text.html#DisplayAlignProperty'/>
  <property name='fill' href='painting.html#FillProperty'/>
  <property name='fill-opacity' href='painting.html#FillOpacityProperty'/>
  <property name='fill-rule' href='painting.html#FillRuleProperty'/>
  <property name='font-family' href='text.html#FontFamilyProperty'/>
  <property name='font-size' href='text.html#FontSizeProperty'/>
  <property name='font-style' href='text.html#FontStyleProperty'/>
  <property name='font-variant' href='text.html#FontVariantProperty'/>
  <property name='font-weight' href='text.html#FontWeightProperty'/>
  <property name='image-rendering' href='painting.html#ImageRenderingProperty'/>
  <property name='line-increment' href='text.html#LineIncrementProperty'/>
  <property name='opacity' href='painting.html#groupOpacity'/>
  <property name='pointer-events' href='interact.html#PointerEventsProperty'/>
  <property name='shape-rendering' href='painting.html#ShapeRenderingProperty'/>
  <property name='solid-color' href='painting.html#SolidColorProperty'/>
  <property name='solid-opacity' href='painting.html#SolidOpacityProperty'/>
  <property name='stop-color' href='painting.html#StopColorProperty'/>
  <property name='stop-opacity' href='painting.html#StopOpacityProperty'/>
  <property name='stroke' href='painting.html#StrokeProperty'/>
  <property name='stroke-dasharray' href='painting.html#StrokeDasharrayProperty'/>
  <property name='stroke-dashoffset' href='painting.html#StrokeDashoffsetProperty'/>
  <property name='stroke-linecap' href='painting.html#StrokeLinecapProperty'/>
  <property name='stroke-linejoin' href='painting.html#StrokeLinejoinProperty'/>
  <property name='stroke-miterlimit' href='painting.html#StrokeMiterlimitProperty'/>
  <property name='stroke-opacity' href='painting.html#StrokeOpacityProperty'/>
  <property name='stroke-width' href='painting.html#StrokeWidthProperty'/>
  <property name='text-align' href='text.html#TextAlignProperty'/>
  <property name='text-anchor' href='text.html#TextAnchorProperty'/>
  <property name='text-rendering' href='painting.html#TextRenderingProperty'/>
  <property name='unicode-bidi' href='text.html#UnicodeBidiProperty'/>
  <property name='vector-effect' href='painting.html#NonScalingStroke'/>
  <property name='viewport-fill' href='painting.html#viewport-fill-property'/>
  <property name='viewport-fill-opacity' href='painting.html#viewport-fill-opacity-property'/>
  <property name='visibility' href='painting.html#VisibilityProperty'/>

  <!-- ... interfaces ..................................................... -->

  <interface name='DOMException' href='svgudom.html#dom__DOMException'/>
  <interface name='Node' href='svgudom.html#dom__Node'/>
  <interface name='Element' href='svgudom.html#dom__Element'/>
  <interface name='Document' href='svgudom.html#dom__Document'/>
  <interface name='ElementTraversal' href='svgudom.html#dom__ElementTraversal'/>
  <interface name='Location' href='svgudom.html#dom__Location'/>
  <interface name='Window' href='svgudom.html#dom__Window'/>

  <interface name='AbstractView' href='svgudom.html#views__AbstractView'/>
  <interface name='DocumentView' href='svgudom.html#views__DocumentView'/>

  <interface name='EventTarget' href='svgudom.html#events__EventTarget'/>
  <interface name='EventListener' href='svgudom.html#events__EventListener'/>
  <interface name='Event' href='svgudom.html#events__Event'/>
  <interface name='MouseEvent' href='svgudom.html#events__MouseEvent'/>
  <interface name='MouseWheelEvent' href='svgudom.html#events__MouseWheelEvent'/>
  <interface name='TextEvent' href='svgudom.html#events__TextEvent'/>
  <interface name='KeyboardEvent' href='svgudom.html#events__KeyboardEvent'/>
  <interface name='UIEvent' href='svgudom.html#events__UIEvent'/>
  <interface name='ProgressEvent' href='svgudom.html#events__ProgressEvent'/>

  <interface name='ElementTimeControl' href='svgudom.html#smil__ElementTimeControl'/>
  <interface name='TimeEvent' href='svgudom.html#smil__TimeEvent'/>

  <interface name='SVGException' href='svgudom.html#svg__SVGException'/>
  <interface name='SVGDocument' href='svgudom.html#svg__SVGDocument'/>
  <interface name='SVGUseElement' href='svgudom.html#svg__SVGUseElement'/>
  <interface name='SVGElementInstance' href='svgudom.html#svg__SVGElementInstance'/>
  <interface name='SVGSVGElement' href='svgudom.html#svg__SVGSVGElement'/>
  <interface name='SVGRGBColor' href='svgudom.html#svg__SVGRGBColor'/>
  <interface name='SVGRect' href='svgudom.html#svg__SVGRect'/>
  <interface name='SVGPoint' href='svgudom.html#svg__SVGPoint'/>
  <interface name='SVGPath' href='svgudom.html#svg__SVGPath'/>
  <interface name='SVGMatrix' href='svgudom.html#svg__SVGMatrix'/>
  <interface name='SVGLocatable' href='svgudom.html#svg__SVGLocatable'/>
  <interface name='SVGLocatableElement' href='svgudom.html#svg__SVGLocatableElement'/>
  <interface name='TraitAccess' href='svgudom.html#svg__TraitAccess'/>
  <interface name='Additional accessing rules' href='svgudom.html#svg__Additional accessing rules'/>
  <interface name='SVGElement' href='svgudom.html#svg__SVGElement'/>
  <interface name='SVGTimedElement' href='svgudom.html#svg__SVGTimedElement'/>
  <interface name='SVGAnimationElement' href='svgudom.html#svg__SVGAnimationElement'/>
  <interface name='SVGVisualMediaElement' href='svgudom.html#svg__SVGVisualMediaElement'/>
  <interface name='SVGTimer' href='svgudom.html#svg__SVGTimer'/>
  <interface name='SVGGlobal' href='svgudom.html#svg__SVGGlobal'/>
  <interface name='AsyncStatusCallback' href='svgudom.html#svg__AsyncStatusCallback'/>
  <interface name='AsyncURLStatus' href='svgudom.html#svg__AsyncURLStatus'/>
  <interface name='EventListenerInitializer2' href='svgudom.html#svg__EventListenerInitializer2'/>

  <!-- ... terms (these will be generated later) .......................... -->
  <term name='lacuna value' href='intro.html#TermLacunaValue'/>
  <term name='unsupported value' href='intro.html#TermUnsupportedValue'/>
  <term name='unsupported' href='intro.html#TermUnsupportedValue'/>
  <term name='descriptive element' href='intro.html#TermDescriptiveElement'/>
  <term name='descriptive elements' href='intro.html#TermDescriptiveElement'/>
  
  <!-- ... -->
</definitions>
